"""message

Revision ID: 2fa733ca52d8
Revises: 
Create Date: 2025-08-12 17:25:23.659714

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2fa733ca52d8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.add_column(sa.Column('department_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint(batch_op.f('employees_biometric_id_key'), type_='unique')
        batch_op.create_foreign_key(None, 'departments', ['department_id'], ['id'])
        batch_op.drop_column('biometric_id')

    with op.batch_alter_table('logs', schema=None) as batch_op:
        batch_op.alter_column('action',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=20),
               existing_nullable=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=10),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.String(length=10),
               type_=sa.INTEGER(),
               existing_nullable=False)

    with op.batch_alter_table('logs', schema=None) as batch_op:
        batch_op.alter_column('action',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)

    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.add_column(sa.Column('biometric_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_unique_constraint(batch_op.f('employees_biometric_id_key'), ['biometric_id'], postgresql_nulls_not_distinct=False)
        batch_op.drop_column('department_id')

    op.drop_table('departments')
    # ### end Alembic commands ###
